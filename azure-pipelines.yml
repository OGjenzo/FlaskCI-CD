trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'aff12410-cd5f-4585-ae61-5beb40e01c39'

  # Web app name
  webAppName: 'pipelinetuto'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'app'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.7
  pythonVersion: '3.7'

stages:
- stage: Deploy
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
            steps:
              - task: UsePythonVersion@0
                inputs:
                  versionSpec: '$(pythonVersion)'
                displayName: 'Use Python $(pythonVersion)'
              - script: |
                  python -m venv antenv
                  source antenv/bin/activate
                  python -m pip install --upgrade pip
                  pip install setup
                  pip install --target="./.python_packages/lib/site-packages"  flask
                workingDirectory: $(projectRoot)
                displayName: "Install requirements"

              - task: ArchiveFiles@2
                inputs:
                  rootFolderOrFile: '$(Build.SourcesDirectory)'
                  includeRootFolder: false
                  archiveType: 'zip'
                  archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
                  replaceExistingArchive: true
                  verbose: # (no value); this input is optional
              - task: AzureWebApp@1
                displayName: 'Deploy Azure Web App : {{ webAppName }}'
                inputs:
                  azureSubscription: aff12410-cd5f-4585-ae61-5beb40e01c39
                  appName: pipelinetuto
                  package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                  deploymentMethod: zipDeploy

                  # The following parameter is specific to the Flask example code. You may
                  # or may not need a startup command for your app.

                  startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'



              - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
                displayName: 'Upload package'
                artifact: drop